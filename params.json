{
  "name": "学习笔记2016/04/25-27",
  "tagline": "技术博客",
  "body": "### 回顾   \r\n方法参数：一句方法内部的处理逻辑至少需要几个数据     \r\n方法参数的作用：   \r\n1）接收外部传入数据在方法内处理    \r\n2）规定调用方法的人必须提供哪些参数   \r\n方法返回值：根据方法调用者的需要 如果方法调用者需要明确返回一个结果就定义返回值 否则可以不定义返回值  \r\n什么时候返回值要用变量接住?    \r\n有返回值的方法 只用一次 可以不定义变量 直接当成一个值用   \r\n如果后续还有继续使用该返回值 就要用变量接住    \r\n***\r\n全局函数 浏览器厂商已经实现 直接调用   \r\nencodeURI 将url中的非法字符转为单字节符号  编码   \r\ndecodeURI 将encodeURL转后的字符串 转换回原文  解码   \r\nencodeURIComponent 对单字节非法字符和多字节非法字符   编码   \r\ndecodeURIComponent  对encodeURIComponent解码  收到编码后的字符串后都要先解码再处理    \r\n将数据通过url发送时都要先编码再发送    \r\n\r\neval() 专门执行字符串格式的代码   \r\neval（\"alert(\"hello\")\");\r\n***\r\n程序结构 3种 顺序（解释执行）（分支）（循环）   \r\n\r\n程序：IPO    \r\n需求：找名词    \r\n这些名字都会成为程序中的数据（输入数据和输出数据）    \r\n输入数据：单价 数量 收款金额   \r\n输出数据：应收金额 找零      \r\n\r\n分析处理流程：  \r\n1.请用户输入：单价，数量，收款金额，保存在变量中   \r\n2.计算：   \r\n应收金额：单价*数量   \r\n找零=收款金额 应收金额   \r\n3.输出：应收金额 找零       \r\n\t//1.请用户输入：单价，数量，收款金额，保存在变量中   \r\n\tvar price = parseFloat(prompt(\"输入单价\"));  \r\n\tvar count = parseInt(prompt(\"输入数量\"));  \r\n\tvar money = parseFloat(prompt(\"请输入收款金额\"));  \r\n\t/*2.计算：     \r\n\t应收金额：单价*数量     \r\n\t找零=收款金额 应收金额 */   \r\n\tvar pay = price*count;  \r\n\tvar change = money-pay;  \r\n\t//3.输出：应收金额 找零   \r\n\talert(\"应收金额\"+pay.toFixed(2));  \r\n\talert(\"找零\"+change.toFixed(2));  \r\n \r\n超过500元打折 有消费提示   \r\n \r\n\tvar price = parseFloat(prompt(\"输入单价\"));    \r\n\tvar count = parseInt(prompt(\"输入数量\"));    \r\n\tvar money = parseFloat(prompt(\"请输入收款金额\"));    \r\n\tvar pay = price*count;  \r\n\tvar change;  \r\n\tif(pay>=500){  \r\n\t\tchange = money-pay*0.8  \r\n\t\talert(\"您的消实际消费金额为\"+pay.toFixed(2)+\"满足500优惠条件，应收金额为\"+pay*0.8.toFixed(2));  \r\n\t}else{  \r\n\t\tchange = money-pay;  \r\n\t\talert(\"应收金额\"+pay.toFixed(2));  \r\n\t};  \r\n\talert(\"找零\"+change.toFixed(2));  ",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}